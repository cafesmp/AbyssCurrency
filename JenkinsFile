pipeline {
    agent any

    stages {
        stage("Build") {
            steps {
                sh 'wget 127.0.0.1:666/depends.zip'
                sh 'unzip depends.zip'
                sh "mvn -version"
                sh "sudo JAVA_HOME=/usr/lib/jvm/java-1.8.0-openjdk-amd64 mvn clean install"
                sh "/usr/lib/jvm/java-8-openjdk-amd64/bin/java -jar Obfuscation/qprotect.jar --input target/AbyssEconomy-PRE.jar --output AbyssEconomy.jar --config Obfuscation/config.yml"
            }
            post {
                success {
                    archiveArtifacts artifacts: 'AbyssEconomy.jar'
                }
            }
        }
    }

    post {
        always {
            cleanWs()
            script {
                def project = env.JOB_NAME.split('\\/')[-1]
                def status = currentBuild.result ?: 'UNKNOWN'
                def changeList = []
                currentBuild.changeSets.each { changeSet ->
                    changeSet.items.each { item ->
                        def shortCommitId = item.commitId.substring(0, 7)
                        def author = item.author.displayName.split("\\+")[-1]
                        def msg = "`${shortCommitId}` ${item.msg} - ${author}"
                        changeList.add("- $msg")
                    }
                }
                def date = new Date()
                def formattedDate = date.format('yyyy-MM-dd HH:mm:ss z')
                def payload = [
                    webhookURL: "https://discord.com/api/webhooks/1081522759970074686/lcMd3h5jqoREtc_C5qQGeXgeyRXue5MC90P8uztMuE_962cMWkW5enk-4OEdsbmdy2vH",
                    title: "${project} #${env.BUILD_NUMBER}",
                    link: env.BUILD_URL,
                    description: "**Build:** ${env.BUILD_NUMBER}\n**Status:** ${status}\n**Changes:**\n${changeList.join('\n')}",
                    footer: "Built on ${formattedDate}",
                    result: currentBuild.currentResult
                ]
                discordSend payload
            }
        }
    }
}